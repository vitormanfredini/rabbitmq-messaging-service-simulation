version: '3.8'

services:

  rabbitmq-management:
    image: rabbitmq:3-management
    container_name: rabbitmq-incoming-messages
    hostname: rabbitmq-incoming-host
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mock-messaging-service:
    image: node:18-alpine
    container_name: mock-messaging-service
    working_dir: /app
    volumes:
      - ./mock-messaging-service:/app
      - ./mock-messaging-service/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev"
    depends_on:
      rabbitmq-management:
        condition: service_healthy

  message-processor:
    image: node:18-alpine
    container_name: message-processor
    working_dir: /app
    volumes:
      - ./message-processor:/app
      - ./message-processor/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - TIME_TO_PROCESS_EACH_MESSAGE=300
    command: sh -c "npm install && npm run dev"
    depends_on:
      rabbitmq-management:
        condition: service_healthy
  
  message-processor-2:
    image: node:18-alpine
    container_name: message-processor-2
    working_dir: /app
    volumes:
      - ./message-processor:/app
      - ./message-processor/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - TIME_TO_PROCESS_EACH_MESSAGE=3000
    command: sh -c "npm install && npm run dev"
    depends_on:
      rabbitmq-management:
        condition: service_healthy
